/****************************************************************************
**
** Copyright (C) 2021 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the Qt Creator documentation.
**
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
**
****************************************************************************/

/*!
    \page studio-packaging.html
    \previouspage studio-crashpad.html
    \nextpage studio-developer-topics.html

    \title Packaging Applications

    \note In this section, you are using advanced menu items. These are not
    visible by default. To toggle the visibility of advanced menu items, see
    \l{Customizing the Menu}.

    When you are ready to deliver your application to users or upload it to
    app stores, you can use \QDS to create suitable packages that contain all
    the necessary files, such as fonts, images, components, and modules.

    \section1 Adding Resources to Packages

    \QDS supports the \e{Qt Resource System} (QRC), which is a
    platform-independent mechanism for storing files in the application's
    executable. This is useful if your application always needs a certain
    set of files (icons, translation files, and so on) and you don't want
    to run the risk of losing the files.

    To package your application, select \uicontrol Build >
    \uicontrol {Generate QRC Resource File}. Then select the
    files to package in the \uicontrol {Add Resources} dialog.

    \image studio-add-resources.png "Add Resources dialog"

    The dialog displays all the files listed in the project file (.qmlproject)
    and located in the project folder. Files that are listed in the project
    file are marked with bold text in the UI, to make it easy to identify the
    differences between the project file and the resource collection file.

    When you select \uicontrol OK, \QDS creates a resource collection file
    (.qrc) in the project folder.

    If you remove files from the project that you already added to the
    resource collection file, you can recreate the resource collection
    file to remove them also from there.

    \section1 Embedding Resources into Applications

    Alternatively, you can embedd the resources into your application by
    selecting \uicontrol Build > \uicontrol {Generate Deployable Package}.
    Select the location for the .qmlrc file, and then select the files to
    embedd in the \uicontrol {Add Resources} dialog.

    When you select \uicontrol OK, \QDS creates a resource collection file
    (.qmlrc) in the location you selected.
*/
